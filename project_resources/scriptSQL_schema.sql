-- MySQL Script generated by MySQL Workbench
-- Fri Nov  5 22:58:57 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema pay_my_buddy
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema pay_my_buddy
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pay_my_buddy` DEFAULT CHARACTER SET utf8 ;
USE `pay_my_buddy` ;

-- -----------------------------------------------------
-- Table `pay_my_buddy`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pay_my_buddy`.`role` ;

CREATE TABLE IF NOT EXISTS `pay_my_buddy`.`role` (
  `role_id` INT GENERATED ALWAYS AS () VIRTUAL,
  `role_name` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `role_name_UNIQUE` ON `pay_my_buddy`.`role` (`role_name` ASC) VISIBLE;

INSERT INTO role (role_id,role_name) VALUES(1,'user');
INSERT INTO role (role_id,role_name) VALUES(2,'admin');
commit;

-- -----------------------------------------------------
-- Table `pay_my_buddy`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pay_my_buddy`.`user` ;

CREATE TABLE IF NOT EXISTS `pay_my_buddy`.`user` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_email` VARCHAR(255) NOT NULL,
  `user_password` VARCHAR(60) NOT NULL,
  `user_first_name` VARCHAR(20) NOT NULL,
  `user_last_name` VARCHAR(20) NOT NULL,
  `user_balance` DECIMAL(9,2) UNSIGNED NOT NULL DEFAULT 0,
  `user_bank_account` VARCHAR(42) NULL,
  `user_role_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_user_role1`
    FOREIGN KEY (`user_role_id`)
    REFERENCES `pay_my_buddy`.`role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `user_email_UNIQUE` ON `pay_my_buddy`.`user` (`user_email` ASC) VISIBLE;

CREATE INDEX `fk_user_role1_idx` ON `pay_my_buddy`.`user` (`user_role_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `pay_my_buddy`.`fee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pay_my_buddy`.`fee` ;

CREATE TABLE IF NOT EXISTS `pay_my_buddy`.`fee` (
  `fee_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `fee_rate` DECIMAL(4,2) UNSIGNED NOT NULL DEFAULT 0,
  `fee_start_date` DATE NULL,
  `fee_end_date` DATE NULL,
  PRIMARY KEY (`fee_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pay_my_buddy`.`transaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pay_my_buddy`.`transaction` ;

CREATE TABLE IF NOT EXISTS `pay_my_buddy`.`transaction` (
  `tra_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `tra_sender_user_id` INT UNSIGNED NOT NULL,
  `tra_recipient_user_id` INT UNSIGNED NOT NULL,
  `tra_date` DATETIME NOT NULL DEFAULT now(),
  `tra_amount` DECIMAL(9,2) UNSIGNED NOT NULL DEFAULT 0,
  `tra_description` VARCHAR(100) NULL,
  `tra_fee_rate_fee_id` INT UNSIGNED NOT NULL,
  `tra_billed` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`tra_id`),
  CONSTRAINT `tra_sender_user_id`
    FOREIGN KEY (`tra_sender_user_id`)
    REFERENCES `pay_my_buddy`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tra_recipient_user_id`
    FOREIGN KEY (`tra_recipient_user_id`)
    REFERENCES `pay_my_buddy`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tra_fee_rate_fee_id`
    FOREIGN KEY (`tra_fee_rate_fee_id`)
    REFERENCES `pay_my_buddy`.`fee` (`fee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `tra_sender_user_id_idx` ON `pay_my_buddy`.`transaction` (`tra_sender_user_id` ASC) INVISIBLE;

CREATE INDEX `tra_recipient_user_id_idx` ON `pay_my_buddy`.`transaction` (`tra_recipient_user_id` ASC) INVISIBLE;

CREATE INDEX `tra_fee_rate_fee_id_idx` ON `pay_my_buddy`.`transaction` (`tra_fee_rate_fee_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `pay_my_buddy`.`connection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pay_my_buddy`.`connection` ;

CREATE TABLE IF NOT EXISTS `pay_my_buddy`.`connection` (
  `con_user_user_id` INT UNSIGNED NOT NULL,
  `con_connection_user_id` INT UNSIGNED NOT NULL,
  `con_connection_name` VARCHAR(45) NULL,
  PRIMARY KEY (`con_user_user_id`, `con_connection_user_id`),
  CONSTRAINT `con_user_user_id`
    FOREIGN KEY (`con_user_user_id`)
    REFERENCES `pay_my_buddy`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `con_connection_user_id`
    FOREIGN KEY (`con_connection_user_id`)
    REFERENCES `pay_my_buddy`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `con_connection_user_id_idx` ON `pay_my_buddy`.`connection` (`con_connection_user_id` ASC) INVISIBLE;

CREATE INDEX `con_user_user_id_idx` ON `pay_my_buddy`.`connection` (`con_user_user_id` ASC) INVISIBLE;

CREATE UNIQUE INDEX `FK_unique` ON `pay_my_buddy`.`connection` (`con_user_user_id` ASC, `con_connection_user_id` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
